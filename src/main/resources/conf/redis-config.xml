<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
      		http://www.springframework.org/schema/beans 
      		http://www.springframework.org/schema/beans/spring-beans.xsd
      		http://www.springframework.org/schema/tx 
      		http://www.springframework.org/schema/tx/spring-tx.xsd
      		http://www.springframework.org/schema/context
      		http://www.springframework.org/schema/context/spring-context.xsd">
   
  <!-- scanner redis properties  --> 
  <context:property-placeholder location="classpath:/conf/redis.properties" />
     
  <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"
	p:minIdle="2"
	p:maxIdle="5"
	p:maxTotal="8"
	p:maxWaitMillis="2000"
	p:testOnBorrow="false"
	p:testOnReturn="false"
	p:testWhileIdle="true"
	p:blockWhenExhausted="true" />
     
  <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
    p:host-name="127.0.0.1"
    p:port="6379"
    p:password=""
    p:timeout="2000" 
    p:pool-config-ref="poolConfig"/>
  
  <!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
    <property name="maxIdle" value="${redis.maxIdle}" />  
    <property name="maxActive" value="${redis.maxActive}" />  
    <property name="maxWait" value="${redis.maxWait}" />  
    <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
  </bean>  
     
  <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
    p:host-name="${redis.host}"
    p:port="${redis.port}"
    p:password="${redis.pass}" 
    p:pool-config-ref="poolConfig"/> -->  
     
  <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
    <property name="connectionFactory" ref="connectionFactory" />  
  </bean>   
    
  <!-- redis缓存管理器   
  <bean id="cacheManager" class="org.jedis.RedisCacheManager">  
        <constructor-arg name="redisOperations" ref="redisTemplate" />  
        是否事务提交，如果事务回滚，缓存也回滚，默认false  
        <property name="transactionAware" value="true" />  
        设置缓存超时时间 已实现自动续期 如果不设置将永久存在  
        <property name="expires">  
            <map>  
                模块信息相关缓存配置   
                <entry key="cache_module" value="1800" /> 
            </map>  
        </property>  
  </bean>   
    支持缓存注解  
  <cache:annotation-driven cache-manager="cacheManager" /> -->
</beans>