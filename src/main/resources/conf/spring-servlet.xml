<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd 
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd 
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd
   	   http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<!--避免IE执行AJAX时,返回JSON出现下载文件 -->
<!-- 	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean> -->

<!-- 	 启动SpringMVC的注解功能，完成请求和注解POJO的映射 
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />    JSON转换器
			</list>
		</property>
	</bean> -->

	<mvc:resources mapping="/static/js/**" location="/static/js/" />
	<mvc:resources mapping="/static/css/**" location="/static/css/" />
	<mvc:resources mapping="/static/images/**" location="/static/images/" />
	<mvc:resources mapping="/static/thirdpartyplugin/**" location="/static/thirdpartyplugin/" />

	<context:component-scan base-package="com.springdemo.*" />
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- 开启spring缓存 <cache:annotation-driven cache-manager="cacheManager" /> -->

	<!-- <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"> 
		<property name="configLocation" value="classpath:/conf/ehcache.xml"></property> 
		</bean> -->

	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/view/"></property> <property name="suffix" 
		value=".jsp"></property> </bean> -->

	<!-- 模板解析器 -->
	<bean id="templateResolver"
		class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/WEB-INF/templates/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
		<property name="cacheable" value="false" />
		<property name="characterEncoding" value="UTF-8" />
	</bean>

	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
	</bean>

	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="characterEncoding" value="UTF-8" />
	</bean>

	<!-- <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"> 
		<property name="cacheManager" ref="ehcache"></property> </bean> -->
	<!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
		<property name="basename"> <value>resources/language</value> </property> 
		<property name="basenames"> <list> <value>resources/language</value> </list> 
		</property> </bean> -->
		
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- encoding -->
        <property name="defaultEncoding" value="UTF-8" />
        <!-- filesize byte 1024*1024=>1048576=>1M, 1024*1024*10=>10485760=>10M-->
        <property name="maxUploadSize" value="104857600000" />
        <!-- memory size-->
        <property name="maxInMemorySize" value="40960" />
    </bean>
    
	<!-- 引入同文件夹下的redis属性配置文件 -->
    <import resource="redis-config.xml"/>
    
	<!--  Aop(面向切面的编程, xml配置) -->    
    <!-- <bean id="aspectDemoOne" class="com.springdemo.aop.AspectDemoOne" />
	<aop:config>       
        <aop:aspect ref="aspectDemoOne"> 
            <aop:pointcut expression="execution(* com.springdemo.service.*.*(..))" id="pointcutOne" />          	
        		前置通知
            <aop:before pointcut-ref="pointcutOne" method="beforeMethod" />
            后置通知
            <aop:after pointcut-ref="pointcutOne" method="afterMethod" />
            返回通知
            <aop:after-returning pointcut-ref="pointcutOne" returning="result" method="afterReturnMethod" />
            异常通知
            <aop:after-throwing pointcut-ref="pointcutOne" throwing="ex" method="afterThrowingMethod" />
            环绕通知
            <aop:around pointcut-ref="pointcutOne" method="aroundMethod" />    
        </aop:aspect>
    </aop:config>  -->
    
<!--     <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	<property name="messageConverters">
		<list>
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<ref bean="stringHttpMessageConverter" />
		</list>
	</property>
	</bean>
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean> -->

</beans>