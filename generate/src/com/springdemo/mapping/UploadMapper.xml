<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springdemo.dao.UploadMapper">
  <resultMap id="BaseResultMap" type="com.springdemo.pojo.Upload">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="isempty" jdbcType="CHAR" property="isempty" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="property" jdbcType="VARCHAR" property="property" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.springdemo.pojo.UploadWithBLOBs">
    <result column="filename" jdbcType="LONGVARCHAR" property="filename" />
    <result column="contenttype" jdbcType="LONGVARCHAR" property="contenttype" />
    <result column="filedata" jdbcType="LONGVARBINARY" property="filedata" />
  </resultMap>
  <sql id="Base_Column_List">
    id, isempty, size, property
  </sql>
  <sql id="Blob_Column_List">
    filename, contenttype, filedata
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from upload
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from upload
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springdemo.pojo.UploadWithBLOBs">
    insert into upload (id, isempty, size, 
      property, filename, contenttype, 
      filedata)
    values (#{id,jdbcType=INTEGER}, #{isempty,jdbcType=CHAR}, #{size,jdbcType=INTEGER}, 
      #{property,jdbcType=VARCHAR}, #{filename,jdbcType=LONGVARCHAR}, #{contenttype,jdbcType=LONGVARCHAR}, 
      #{filedata,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.springdemo.pojo.UploadWithBLOBs">
    insert into upload
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isempty != null">
        isempty,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="property != null">
        property,
      </if>
      <if test="filename != null">
        filename,
      </if>
      <if test="contenttype != null">
        contenttype,
      </if>
      <if test="filedata != null">
        filedata,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="isempty != null">
        #{isempty,jdbcType=CHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="property != null">
        #{property,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=LONGVARCHAR},
      </if>
      <if test="contenttype != null">
        #{contenttype,jdbcType=LONGVARCHAR},
      </if>
      <if test="filedata != null">
        #{filedata,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springdemo.pojo.UploadWithBLOBs">
    update upload
    <set>
      <if test="isempty != null">
        isempty = #{isempty,jdbcType=CHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="property != null">
        property = #{property,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        filename = #{filename,jdbcType=LONGVARCHAR},
      </if>
      <if test="contenttype != null">
        contenttype = #{contenttype,jdbcType=LONGVARCHAR},
      </if>
      <if test="filedata != null">
        filedata = #{filedata,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.springdemo.pojo.UploadWithBLOBs">
    update upload
    set isempty = #{isempty,jdbcType=CHAR},
      size = #{size,jdbcType=INTEGER},
      property = #{property,jdbcType=VARCHAR},
      filename = #{filename,jdbcType=LONGVARCHAR},
      contenttype = #{contenttype,jdbcType=LONGVARCHAR},
      filedata = #{filedata,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springdemo.pojo.Upload">
    update upload
    set isempty = #{isempty,jdbcType=CHAR},
      size = #{size,jdbcType=INTEGER},
      property = #{property,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.springdemo.pojo.Upload">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="property" jdbcType="VARCHAR" property="property" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.springdemo.pojo.UploadWithBLOBs">
    <result column="filename" jdbcType="LONGVARCHAR" property="filename" />
    <result column="filedata" jdbcType="LONGVARBINARY" property="filedata" />
  </resultMap>
  <sql id="Base_Column_List">
    id, property
  </sql>
  <sql id="Blob_Column_List">
    filename, filedata
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from upload
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from upload
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springdemo.pojo.UploadWithBLOBs">
    insert into upload (id, property, filename, 
      filedata)
    values (#{id,jdbcType=INTEGER}, #{property,jdbcType=VARCHAR}, #{filename,jdbcType=LONGVARCHAR}, 
      #{filedata,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.springdemo.pojo.UploadWithBLOBs">
    insert into upload
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="property != null">
        property,
      </if>
      <if test="filename != null">
        filename,
      </if>
      <if test="filedata != null">
        filedata,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="property != null">
        #{property,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=LONGVARCHAR},
      </if>
      <if test="filedata != null">
        #{filedata,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springdemo.pojo.UploadWithBLOBs">
    update upload
    <set>
      <if test="property != null">
        property = #{property,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        filename = #{filename,jdbcType=LONGVARCHAR},
      </if>
      <if test="filedata != null">
        filedata = #{filedata,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.springdemo.pojo.UploadWithBLOBs">
    update upload
    set property = #{property,jdbcType=VARCHAR},
      filename = #{filename,jdbcType=LONGVARCHAR},
      filedata = #{filedata,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springdemo.pojo.Upload">
    update upload
    set property = #{property,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>